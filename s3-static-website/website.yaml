AWSTemplateFormatVersion: '2010-09-09'
Description: Creates an S3 bucket and CloudFront distribution to host a static website

Parameters:
  DomainName:
    Description: Domain name for the website
    Type: String
  AcmCertificateArn:
    Description: ARN of the existing ACM certificate (must be in us-east-1)
    Type: String
  HostedZoneId:
    Description: Hosted Zone ID for the website domain
    Type: String

Resources:
  WebsiteBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      AccessControl: PublicRead
      BucketName: !Ref DomainName
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html

  BucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref WebsiteBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: PublicReadGetObject
            Effect: Allow
            Principal: '*'
            Action:
              - s3:GetObject
            Resource: !Sub 'arn:aws:s3:::${WebsiteBucket}/*'

  # CloudFormation cannot create the ACL grant required by CloudFront to write
  # access logs. Requires ACL entry granting List/Read/Write for
  # c4c1ede66af53448b93c283ce9448c4ba468c9432aa01d700d3878632f77d2d0

  # WebsiteLogBucket:
  #   Type: AWS::S3::Bucket
  #   Properties:
  #     BucketName: !Sub ${DomainName}-access-logs
  #     VersioningConfiguration:
  #       Status: Suspended
  #     LifecycleConfiguration:
  #       Rules:
  #         - Status: Enabled
  #           ExpirationInDays: 3653
  #           NoncurrentVersionExpirationInDays: 1
  #     PublicAccessBlockConfiguration:
  #       BlockPublicAcls: true
  #       IgnorePublicAcls: true
  #       BlockPublicPolicy: true
  #       RestrictPublicBuckets: true

  CloudFrontDistribution:
    Type: 'AWS::CloudFront::Distribution'
    Properties:
      DistributionConfig:
        Comment: !Sub CloudFront Distribution for ${DomainName}
        Aliases:
          - !Ref DomainName
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          CachedMethods:
            - GET
            - HEAD
            - OPTIONS
          Compress: true
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          TargetOriginId: !Ref WebsiteBucket
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2
        IPV6Enabled: true
        Origins:
          - Id: !Ref WebsiteBucket
            DomainName: !GetAtt WebsiteBucket.DomainName
            S3OriginConfig:
              OriginAccessIdentity: ''
        # Logging:
        #   Bucket: !Ref WebsiteLogBucket
        ViewerCertificate:
          AcmCertificateArn: !Ref AcmCertificateArn
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2021

  Route53RecordSet:
    Type: 'AWS::Route53::RecordSet'
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !Ref DomainName
      Type: A
      AliasTarget:
        DNSName: !GetAtt CloudFrontDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2

Outputs:
  BucketName:
    Description: Name of the S3 bucket created
    Value: !Ref WebsiteBucket

  CloudFrontDistributionDomain:
    Description: Domain name of the CloudFront distribution
    Value: !GetAtt CloudFrontDistribution.DomainName
